<?php

// Template of PHPUnit test case
if (!defined('PHPUnit_MAIN_METHOD')) {
	define('PHPUnit_MAIN_METHOD', 'AllTests::main');
}

require_once 'PHPUnit/TextUI/TestRunner.php';
require_once 'TemplateTest.php';
require_once 'PhpunitReset.php';
require_once 'PhpunitConfig.php';
require_once 'PhpunitBasicNavigation.php';
require_once 'PhpunitFrenchDatePicker.php';
require_once 'PhpunitBasicMember.php';
require_once 'PhpunitAsterix.php';
require_once 'PhpunitComptesCreate.php';
require_once 'PhpunitTarifs.php';
require_once 'PhpunitPlaneurs.php';
require_once 'PhpunitAvions.php';
require_once 'PhpunitEcritures1.php';
require_once 'PhpunitAchat.php';
require_once 'PhpunitVolAvion.php';
require_once 'PhpunitVolPlaneur.php';
require_once 'PhpunitBasicCompta.php';
require_once 'PhpunitDroits.php';
require_once 'PhpunitTickets.php';
require_once 'PhpunitBugs.php';
require_once 'PhpunitStatistiques.php';
require_once 'PhpunitFacturation.php';
require_once 'CRUD_terrain.php';
require_once 'PhpunitTests.php';
require_once 'PhpunitCoverage.php';

/**
 * Test class for MyClass.
 * Generated by PHPUnit on 2007-08-11 at 20:01:00.
 */
class AllTests extends PHPUnit_Framework_TestCase {

	public static function suite() {
		$suite = new PHPUnit_Framework_TestSuite('AllTests');
		$suite->addTest(PhpunitReset::suite("PhpunitReset"));
		$suite->addTest(PhpunitConfig::suite("PhpunitTests"));
		
        $suite->addTest(PhpunitBasicNavigation::suite("PhpunitBasicNavigation"));
        
        $suite->addTest(PhpunitConfig::suite("PhpunitConfig"));
        $suite->addTest(PhpunitFrenchDatePicker::suite("PhpunitFrenchDatePicker"));
        $suite->addTest(CRUD_terrain::suite("CRUD_terrain"));
        
        $suite->addTest(PhpunitBasicMember::suite("PhpunitBasicMember"));
        $suite->addTest(PhpunitAsterix::suite("PhpunitAsterix"));
        
//         return $suite;
        
        $suite->addTest(PhpunitComptesCreate::suite("PhpunitComptesCreate"));

        $suite->addTest(PhpunitTarifs::suite("PhpunitTarifs"));
        
        $suite->addTest(PhpunitPlaneurs::suite("PhpunitPlaneurs"));
        $suite->addTest(PhpunitAvions::suite("PhpunitAvions"));

        $suite->addTest(PhpunitEcritures1::suite("PhpunitEcritures1"));
        $suite->addTest(PhpunitAchat::suite("PhpunitAchat"));
        $suite->addTest(PhpunitVolAvion::suite("PhpunitVolAvion"));
        $suite->addTest(PhpunitVolPlaneur::suite("PhpunitVolPlaneur"));

        $suite->addTest(PhpunitBasicCompta::suite("PhpunitBasicCompta"));
        $suite->addTest(PhpunitDroits::suite("PhpunitDroits"));
        $suite->addTest(PhpunitTickets::suite("PhpunitTickets"));
        $suite->addTest(PhpunitBugs::suite("PhpunitBugs"));
        $suite->addTest(PhpunitStatistiques::suite("PhpunitStatistiques"));
        $suite->addTest(PhpunitFacturation::suite("PhpunitFacturation"));

		$suite->addTest(PhpunitConfig::suite("PhpunitCoverage"));
        return $suite;
	}

	/**
	 * Runs the test methods of this class.
	 *
	 * @access public
	 * @static
	 */
	public static function main() {
		$coverage = new PHP_CodeCoverage;
		echo "start coverage\n";
		$coverage->start('<name of test>');
		$result = PHPUnit_TextUI_TestRunner :: run(Self :: suite());
		$coverage->stop();
		echo "stop coverage\n";

		$writer = new PHP_CodeCoverage_Report_Clover;
		$writer->process($coverage, 'clover.xml');

		$writer = new PHP_CodeCoverage_Report_HTML;
		$writer->process($coverage, 'code-coverage-report');
	}

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 *
	 * @access protected
	 */
	protected function setUp() {
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 *
	 * @access protected
	 */
	protected function tearDown() {
	}
    
	/**
	 * Structure de test
	 */
	public function test0() {
	}

}

// Call MyClassTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'AllTests::main') {
	AllTests :: main();
}
?>

