<?php

// Template of PHPUnit test case
if (!defined('PHPUnit_MAIN_METHOD')) {
	define('PHPUnit_MAIN_METHOD', 'CoverageTest::main');
}

require_once 'PHP/CodeCoverage/Autoload.php';

/**
 * Test class for MyClass.
 * Generated by PHPUnit on 2007-08-11 at 20:01:00.
 */
class CoverageTest extends PHPUnit_Framework_TestCase {

	protected $coverage;

	public static function suite() {
		require_once 'PHPUnit/TextUI/TestRunner.php';


		$suite = new PHPUnit_Framework_TestSuite('CoverageTest');
		return $suite;
	}

	/**
	 * Runs the test methods of this class.
	 *
	 * @access public
	 * @static
	 */
	public static function main() {
		$result = PHPUnit_TextUI_TestRunner :: run(Self::suite());
	}

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 *
	 * @access protected
	 */
	protected function setUp() {
		$this->coverage = new PHP_CodeCoverage;
		$this->coverage->start('<name of test>');
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 *
	 * @access protected
	 */
	protected function tearDown() {
		$this->coverage->stop();

		$writer = new PHP_CodeCoverage_Report_Clover;
		$writer->process($this->coverage, 'clover.xml');

		$writer = new PHP_CodeCoverage_Report_HTML;
		$writer->process($this->coverage, 'code-coverage-report');
	}

	/**
	 * @todo Implement testMyMethod().
	 */
	public function testMyMethod() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @todo Implement testMyMethod().
	 */
	public function test2() {
		// Remove the following lines when you implement this test.
		$this->assertEquals(1, 1, "1 == 1");
		if (FALSE) {
			$this->assertEquals(1, 0, "1 == 0");
			$this->assertEquals(1, 0, "1 == 0");
		}
	}

}

// Call CoverageTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'CoverageTest::main') {
	CoverageTest :: main();
}
?>

